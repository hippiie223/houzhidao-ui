{"remainingRequest":"C:\\Users\\39239\\Desktop\\houzhidao\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\39239\\Desktop\\houzhidao\\src\\components\\MultSelect\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\39239\\Desktop\\houzhidao\\src\\components\\MultSelect\\index.vue","mtime":1556460105989},{"path":"C:\\Users\\39239\\Desktop\\houzhidao\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\39239\\Desktop\\houzhidao\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\39239\\Desktop\\houzhidao\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\39239\\Desktop\\houzhidao\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport allLevel from \"@/constant/level\";\r\nexport default {\r\n    props: [\"color\"],\r\n    data() {\r\n        return {\r\n            tabIndex: [0, 0, 0]\r\n        };\r\n    },\r\n    computed: {\r\n        level() {\r\n            return [\"方 向\", \"分 类\", \"难 度\"];\r\n        },\r\n        levelName() {\r\n            const first = [\"全部\"].concat(Object.keys(allLevel));\r\n            const array = Object.values(allLevel).reduce(\r\n                (total, value, index) => {\r\n                    return total.concat(value);\r\n                },\r\n                [\"全部\"]\r\n            );\r\n            const two =\r\n                this.tabIndex[0] === 0\r\n                    ? array\r\n                    : [\"全部\"].concat(\r\n                          Object.values(allLevel)[this.tabIndex[0] - 1]\r\n                      );\r\n            const three = [\"全部\", \"初级\", \"中级\", \"高级\"];\r\n            return [first, two, three];\r\n        }\r\n    },\r\n    methods: {\r\n        changeTab(index, i, name) {\r\n            // 如果改变的是第一行，则第二行归0\r\n            if (index === 0) {\r\n                this.tabIndex.splice(1, 1, 0);\r\n            }\r\n\r\n            // 改变的是第二行并且第一行选中的是全部,第一行的也要对应改变\r\n            if (index === 1 && this.tabIndex[0] === 0) {\r\n                const array = Object.values(allLevel);\r\n                for (let j = 0; j < array.length; j++) {\r\n                    if (array[j].includes(name)) {\r\n                        this.tabIndex.splice(0, 1, j + 1);\r\n                        break;\r\n                    } else {\r\n                        i = i - array[j].length;\r\n                    }\r\n                }\r\n            }\r\n            this.tabIndex.splice(index, 1, i);\r\n        }\r\n    }\r\n};\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/MultSelect","sourcesContent":["<template>\r\n    <el-card>\r\n        <div v-for=\"(item,index) in level\" :key=\"index\" class=\"item\">\r\n            <span class=\"title\">{{item}} :</span>\r\n            <span\r\n                v-for=\"(name,i) in levelName[index]\"\r\n                :key=\"i\"\r\n                class=\"subItem\"\r\n                :class=\"i === tabIndex[index] ? 'on':''\"\r\n                :style=\"i === tabIndex[index] ? 'background:' + color : ''\"\r\n                @click=\"changeTab(index,i,name)\"\r\n            >{{name}}</span>\r\n        </div>\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\nimport allLevel from \"@/constant/level\";\r\nexport default {\r\n    props: [\"color\"],\r\n    data() {\r\n        return {\r\n            tabIndex: [0, 0, 0]\r\n        };\r\n    },\r\n    computed: {\r\n        level() {\r\n            return [\"方 向\", \"分 类\", \"难 度\"];\r\n        },\r\n        levelName() {\r\n            const first = [\"全部\"].concat(Object.keys(allLevel));\r\n            const array = Object.values(allLevel).reduce(\r\n                (total, value, index) => {\r\n                    return total.concat(value);\r\n                },\r\n                [\"全部\"]\r\n            );\r\n            const two =\r\n                this.tabIndex[0] === 0\r\n                    ? array\r\n                    : [\"全部\"].concat(\r\n                          Object.values(allLevel)[this.tabIndex[0] - 1]\r\n                      );\r\n            const three = [\"全部\", \"初级\", \"中级\", \"高级\"];\r\n            return [first, two, three];\r\n        }\r\n    },\r\n    methods: {\r\n        changeTab(index, i, name) {\r\n            // 如果改变的是第一行，则第二行归0\r\n            if (index === 0) {\r\n                this.tabIndex.splice(1, 1, 0);\r\n            }\r\n\r\n            // 改变的是第二行并且第一行选中的是全部,第一行的也要对应改变\r\n            if (index === 1 && this.tabIndex[0] === 0) {\r\n                const array = Object.values(allLevel);\r\n                for (let j = 0; j < array.length; j++) {\r\n                    if (array[j].includes(name)) {\r\n                        this.tabIndex.splice(0, 1, j + 1);\r\n                        break;\r\n                    } else {\r\n                        i = i - array[j].length;\r\n                    }\r\n                }\r\n            }\r\n            this.tabIndex.splice(index, 1, i);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.item {\r\n    margin: 10px 0;\r\n\r\n    .title {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    .subItem {\r\n        margin: 0 4px;\r\n        display: inline-block;\r\n        padding: 6px 16px;\r\n        margin-bottom: 10px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .on {\r\n        color: #fff;\r\n        border-radius: 8px;\r\n    }\r\n}\r\n</style>\r\n"]}]}