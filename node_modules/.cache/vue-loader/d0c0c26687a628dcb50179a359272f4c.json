{"remainingRequest":"C:\\Users\\pancheng\\Desktop\\pancheng\\毕业设计\\project\\houzhidao\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\pancheng\\Desktop\\pancheng\\毕业设计\\project\\houzhidao\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\pancheng\\Desktop\\pancheng\\毕业设计\\project\\houzhidao\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pancheng\\Desktop\\pancheng\\毕业设计\\project\\houzhidao\\src\\views\\question\\detail\\index.vue?vue&type=template&id=c561561a&scoped=true&","dependencies":[{"path":"C:\\Users\\pancheng\\Desktop\\pancheng\\毕业设计\\project\\houzhidao\\src\\views\\question\\detail\\index.vue","mtime":1556429795566},{"path":"C:\\Users\\pancheng\\Desktop\\pancheng\\毕业设计\\project\\houzhidao\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pancheng\\Desktop\\pancheng\\毕业设计\\project\\houzhidao\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\pancheng\\Desktop\\pancheng\\毕业设计\\project\\houzhidao\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pancheng\\Desktop\\pancheng\\毕业设计\\project\\houzhidao\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"question\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"left\" },\n        [\n          _c(\n            \"el-card\",\n            { staticClass: \"detail\", class: { max_height: _vm.showMore } },\n            [\n              _c(\"div\", { staticClass: \"mark\" }, [\n                _c(\"span\", { staticClass: \"iconfont\" }, [_vm._v(\"\")]),\n                _vm._v(\" / 问答\\n            \")\n              ]),\n              _c(\"div\", { staticClass: \"title\" }, [\n                _vm._v(_vm._s(_vm.question.title))\n              ]),\n              _vm._l(_vm.question.tags, function(item) {\n                return _c(\n                  \"el-tag\",\n                  {\n                    key: item,\n                    staticClass: \"tag\",\n                    attrs: { type: \"info\", size: \"small\" }\n                  },\n                  [_vm._v(_vm._s(item))]\n                )\n              }),\n              _c(\"span\", { staticClass: \"time\" }, [\n                _vm._v(_vm._s(_vm.question.time))\n              ]),\n              _c(\"span\", { staticClass: \"author\" }, [\n                _vm._v(_vm._s(_vm.question.author))\n              ]),\n              _c(\"div\", {\n                staticClass: \"content\",\n                domProps: { innerHTML: _vm._s(_vm.question.content) }\n              }),\n              _vm.showMore\n                ? _c(\n                    \"div\",\n                    {\n                      staticClass: \"showMore\",\n                      on: { click: _vm.showMoreContent }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n                点击查看详细描述\\n                \"\n                      ),\n                      _c(\"span\", { staticClass: \"el-icon-arrow-down\" })\n                    ]\n                  )\n                : _vm._e()\n            ],\n            2\n          ),\n          _c(\"h4\", [_vm._v(\"回答 (\" + _vm._s(_vm.answer.length) + \")\")]),\n          _c(\n            \"el-card\",\n            { staticClass: \"answer\" },\n            [\n              _c(\"div\", { staticClass: \"accept_mark\" }),\n              _vm._l(_vm.answer, function(item, index) {\n                return _c(\"div\", { key: item.id, staticClass: \"item\" }, [\n                  _c(\"div\", {\n                    staticClass: \"item_pic\",\n                    style: \"background-image:url(\" + item.picture + \")\"\n                  }),\n                  _c(\n                    \"div\",\n                    { staticClass: \"item_right\" },\n                    [\n                      _c(\"div\", { staticClass: \"item_name\" }, [\n                        _vm._v(_vm._s(item.name))\n                      ]),\n                      _c(\"div\", { staticClass: \"item_content\" }, [\n                        _vm._v(_vm._s(item.content))\n                      ]),\n                      _c(\n                        \"span\",\n                        {\n                          staticClass: \"replayBtn\",\n                          on: {\n                            click: function($event) {\n                              return _vm.startReplay(item.name, index)\n                            }\n                          }\n                        },\n                        [_vm._v(\"回复\")]\n                      ),\n                      _c(\"span\", { staticClass: \"item_time\" }, [\n                        _vm._v(_vm._s(item.time))\n                      ]),\n                      _vm._l(item.replay, function(replay) {\n                        return _c(\n                          \"div\",\n                          { key: replay.id, staticClass: \"replay\" },\n                          [\n                            _c(\"div\", {\n                              staticClass: \"replay_pic\",\n                              style:\n                                \"background-image:url(\" + replay.picture + \")\"\n                            }),\n                            _c(\"div\", { staticClass: \"replay_about\" }, [\n                              _c(\"div\", { staticClass: \"replay_name\" }, [\n                                _c(\"span\", { staticClass: \"item_name\" }, [\n                                  _vm._v(_vm._s(replay.sender))\n                                ]),\n                                _c(\"span\", { staticClass: \"replay_title\" }, [\n                                  _vm._v(\"回复\")\n                                ]),\n                                _c(\"span\", { staticClass: \"item_name\" }, [\n                                  _vm._v(_vm._s(replay.receiver))\n                                ])\n                              ]),\n                              _c(\"div\", { staticClass: \"item_content\" }, [\n                                _vm._v(_vm._s(replay.content))\n                              ]),\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass: \"replayBtn\",\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.startReplay(\n                                        replay.sender,\n                                        index\n                                      )\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"回复\")]\n                              ),\n                              _c(\"span\", { staticClass: \"item_time\" }, [\n                                _vm._v(_vm._s(replay.time))\n                              ])\n                            ])\n                          ]\n                        )\n                      }),\n                      _vm.showReplay[index]\n                        ? _c(\"div\", { staticClass: \"replay\" }, [\n                            _c(\"div\", {\n                              staticClass: \"replay_pic\",\n                              style:\n                                \"background-image:url(\" + _vm.userInfo.pic + \")\"\n                            }),\n                            _c(\n                              \"div\",\n                              { staticClass: \"replay_input\" },\n                              [\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    type: \"textarea\",\n                                    placeholder:\n                                      \"回复 \" +\n                                      _vm.replayInfo.receiver +\n                                      \": 写下你的回复\",\n                                    maxlength: 100,\n                                    autosize: { minRows: 3 }\n                                  },\n                                  model: {\n                                    value: _vm.replayInfo.content,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.replayInfo, \"content\", $$v)\n                                    },\n                                    expression: \"replayInfo.content\"\n                                  }\n                                }),\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.cancelReplay(index)\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"取消\")]\n                                ),\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    attrs: { type: \"primary\" },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.submitReplay(index)\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"回复\")]\n                                )\n                              ],\n                              1\n                            )\n                          ])\n                        : _vm._e()\n                    ],\n                    2\n                  )\n                ])\n              })\n            ],\n            2\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"right\" },\n        [\n          _c(\"el-card\", { staticClass: \"question_info\" }, [\n            _c(\"div\", { staticClass: \"about\" }, [\n              _c(\"div\", { staticClass: \"answerNum\" }, [\n                _vm._v(\n                  \"\\n                    \" +\n                    _vm._s(_vm.answer.length) +\n                    \"\\n                    \"\n                ),\n                _c(\"div\", [_vm._v(\"回答\")])\n              ]),\n              _c(\"div\", { staticClass: \"attendNum\" }, [\n                _vm._v(\n                  \"\\n                    \" +\n                    _vm._s(_vm.question.attendNum) +\n                    \"\\n                    \"\n                ),\n                _c(\"div\", [_vm._v(\"关注\")])\n              ]),\n              _c(\"div\", { staticClass: \"viewNum\" }, [\n                _vm._v(\n                  \"\\n                    \" +\n                    _vm._s(_vm.question.viewNum) +\n                    \"\\n                    \"\n                ),\n                _c(\"div\", [_vm._v(\"浏览\")])\n              ])\n            ]),\n            _c(\n              \"div\",\n              { staticClass: \"answer\", on: { click: _vm.startAnswer } },\n              [_vm._v(\"我来回答\")]\n            ),\n            _c(\"div\", { staticClass: \"attend\" }, [_vm._v(\"关注\")])\n          ]),\n          _c(\"h4\", [_vm._v(\"相关问题推荐\")]),\n          _vm._l(_vm.relatedQuestion, function(item) {\n            return _c(\"div\", { key: item.id, staticClass: \"item\" }, [\n              _c(\"div\", { staticClass: \"iconfont\" }, [_vm._v(\"\")]),\n              _c(\"div\", { staticClass: \"title\" }, [_vm._v(_vm._s(item.title))])\n            ])\n          })\n        ],\n        2\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"发表评论\",\n            visible: _vm.answerDialog,\n            \"before-close\": _vm.cancelAnswer\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.answerDialog = $event\n            }\n          }\n        },\n        [\n          _c(\"markdown-editor\", {\n            ref: \"markdown\",\n            staticClass: \"markdown\",\n            attrs: { language: \"zh_CN\", mode: \"wysiwyg\", height: \"200px\" },\n            model: {\n              value: _vm.markdownContent,\n              callback: function($$v) {\n                _vm.markdownContent = $$v\n              },\n              expression: \"markdownContent\"\n            }\n          }),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\"el-button\", { on: { click: _vm.cancelAnswer } }, [\n                _vm._v(\"取 消\")\n              ]),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.submitAnswer } },\n                [_vm._v(\"提 交\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}